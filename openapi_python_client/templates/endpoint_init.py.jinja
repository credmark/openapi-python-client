from typing import Any, Optional, TYPE_CHECKING

if TYPE_CHECKING:
    from ...client import {{ client_name }}

from . import (
{% for endpoint in endpoint_collection.endpoints %}
{{ module_name(endpoint) }},
{% endfor %}
)

{% for endpoint in endpoint_collection.endpoints %}
{% for relative in endpoint.relative_imports %}
{{ relative }}
{% endfor %}
{% endfor %}

{% from "endpoint_macros.py.jinja" import arguments, docstring, kwargs %}

class {{ endpoint_collection.tag.class_name }}:
    def __init__(self, client: "{{ client_name }}"):
        self.__client = client

{% for endpoint in endpoint_collection.endpoints %}
{% set return_string = endpoint.response_type() %}
{% set mod = module_name(endpoint) %}
    
    def {{ mod }}(
        self,
        {{ arguments(endpoint) | indent(4) }}
    ) -> Optional[{{ return_string }}]:
        {{ docstring(endpoint, return_string) | indent(8) }}
        return {{ mod }}.sync(
            client=self.__client,
            {{ kwargs(endpoint, False) }}
        )

    async def {{ mod }}_async(
        self,
        {{ arguments(endpoint) | indent(4) }}
    ) -> Optional[{{ return_string }}]:
        {{ docstring(endpoint, return_string) | indent(8) }}
        return await {{ mod }}.asyncio(
            client=self.__client,
            {{ kwargs(endpoint, False) }}
        )

{% endfor %}
